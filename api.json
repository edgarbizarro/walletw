{
    "openapi": "3.1.0",
    "info": {
        "title": "Wallet API",
        "version": "1.0.0",
        "description": "API para gerenciar carteiras financeiras com recursos de dep\u00f3sito, transfer\u00eancia e estorno."
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Local"
        },
        {
            "url": "https://domain.example/api",
            "description": "Prod"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "operationId": "login.login",
                "summary": "Authenticate user",
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "operationId": "login.logout",
                "summary": "Logout user",
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "operationId": "register.register",
                "summary": "Register a new user",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "document": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "individual",
                                            "business"
                                        ]
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "document",
                                    "type",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet/deposit": {
            "post": {
                "operationId": "wallet.deposit",
                "description": "Add money to the user's wallet",
                "summary": "Deposit funds",
                "tags": [
                    "Wallet"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0.01
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "amount"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/wallet/transfer": {
            "post": {
                "operationId": "wallet.transfer",
                "description": "Transfer money to another user",
                "summary": "Transfer funds",
                "tags": [
                    "Wallet"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0.01
                                    },
                                    "recipient_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "amount",
                                    "recipient_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/wallet/reverse/{transactionId}": {
            "post": {
                "operationId": "wallet.reverse",
                "description": "Reverse a previously completed transaction",
                "summary": "Reverse transaction",
                "tags": [
                    "Wallet"
                ],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/wallet/balance": {
            "get": {
                "operationId": "wallet.balance",
                "description": "Retrieve the current wallet balance",
                "summary": "Get balance",
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/wallet/transactions": {
            "get": {
                "operationId": "wallet.transactions",
                "description": "Get paginated list of user's transactions",
                "summary": "List transactions",
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            }
        }
    }
}